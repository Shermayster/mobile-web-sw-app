'use strict'; /* eslint-env browser, no-unused-vars: "off" */
/* global  DBHelper, google */
/* */
var restaurants = void 0;
var neighborhoods = void 0;
var cuisines = void 0;
var map = void 0;
var markers = [];

/**
                   * Add service worker to main page
                   */

if ('serviceWorker' in navigator) {
  navigator.serviceWorker.register('./sw.js').then(function () {
    console.log('service worker registered!');
  }).
  catch(function (err) {
    console.log(err);
  });
}

/**
   * Set cuisines HTML.
   */
var fillCuisinesHTML = function fillCuisinesHTML() {
  var select = document.getElementById('cuisines-select');
  cuisines.forEach(function (cuisine) {
    var option = document.createElement('option');
    option.innerHTML = cuisine;
    option.value = cuisine;
    select.append(option);
  });
};

/**
    * Fetch all cuisines and set their HTML.
    */
var fetchCuisines = function fetchCuisines() {
  DBHelper.fetchCuisines(function (error, cuisines) {
    if (error) {
      // Got an error!
      console.error(error);
    } else {
      cuisines = cuisines;
      fillCuisinesHTML();
    }
  });
};

/**
    * Set neighborhoods HTML.
    */
var fillNeighborhoodsHTML = function fillNeighborhoodsHTML() {
  var select = document.getElementById('neighborhoods-select');
  neighborhoods.forEach(function (neighborhood) {
    var option = document.createElement('option');
    option.innerHTML = neighborhood;
    option.value = neighborhood;
    select.append(option);
  });
};

var appendRestaurantImage = function appendRestaurantImage(restaurant, li) {
  var image = document.createElement('img');
  image.className = 'restaurant-img';
  image.src = DBHelper.imageUrlForRestaurant(restaurant);
  image.alt = 'Restaurant: ' + restaurant.name;
  li.append(image);
};

var appendRestaurantTitle = function appendRestaurantTitle(restaurant, li) {
  var name = document.createElement('h3');
  name.innerHTML = restaurant.name;
  li.append(name);
};

var appendRestaurantNeighborhood = function appendRestaurantNeighborhood(restaurant, li) {
  var neighborhood = document.createElement('p');
  neighborhood.innerHTML = restaurant.neighborhood;
  li.append(neighborhood);
};

var appendRestaurantAddress = function appendRestaurantAddress(restaurant, li) {
  var address = document.createElement('p');
  address.innerHTML = restaurant.address;
  li.append(address);
};

var appendRestaurantDetails = function appendRestaurantDetails(restaurant, li) {
  var more = document.createElement('a');
  more.innerHTML = 'View Details';
  more.href = DBHelper.urlForRestaurant(restaurant);
  li.append(more);
};

/**
    * Add markers for current restaurants to the map.
    */
var addMarkersToMap = function addMarkersToMap() {
  restaurants.forEach(function (restaurant) {
    // Add marker to the map
    var marker = DBHelper.mapMarkerForRestaurant(restaurant, self.map);
    google.maps.event.addListener(marker, 'click', function () {
      window.location.href = marker.url;
    });
    self.markers.push(marker);
  });
};

var appendRestaurantItems = function appendRestaurantItems(restaurant, li) {
  appendRestaurantImage(restaurant, li);
  appendRestaurantTitle(restaurant, li);
  appendRestaurantNeighborhood(restaurant, li);
  appendRestaurantAddress(restaurant, li);
  appendRestaurantDetails(restaurant, li);
};

/**
    * Create restaurant HTML.
    * @param {*} restaurant restaurna object
    * @return {*} HTML Element
    */
var createRestaurantHTML = function createRestaurantHTML(restaurant) {
  var li = document.createElement('li');
  appendRestaurantItems(restaurant, li);
  return li;
};

/**
    * Create all restaurants HTML and add them to the webpage.
    */
var fillRestaurantsHTML = function fillRestaurantsHTML() {
  var ul = document.getElementById('restaurants-list');
  restaurants.forEach(function (restaurant) {
    ul.append(createRestaurantHTML(restaurant));
  });
  addMarkersToMap();
};
/**
    * Fetch all neighborhoods and set their HTML.
    */
var fetchNeighborhoods = function fetchNeighborhoods() {
  DBHelper.fetchNeighborhoods(function (error, neighborhoodsList) {
    if (error) {
      // Got an error
      console.error(error);
    } else {
      neighborhoods = neighborhoodsList;
      fillNeighborhoodsHTML();
    }
  });
};

/**
    * @desc Clear current restaurants, their HTML and remove their map markers.
    * @param {*} restaurantsList todo: add list description
    */
var resetRestaurants = function resetRestaurants(restaurantsList) {
  // Remove all restaurants
  restaurants = [];
  var ul = document.getElementById('restaurants-list');
  ul.innerHTML = '';

  // Remove all map markers
  markers.forEach(function (m) {return m.setMap(null);});
  markers = [];
  restaurants = restaurantsList;
};

/**
    * Update page and map for current restaurants.
    */
var updateRestaurants = function updateRestaurants() {
  var cSelect = document.getElementById('cuisines-select');
  var nSelect = document.getElementById('neighborhoods-select');

  var cIndex = cSelect.selectedIndex;
  var nIndex = nSelect.selectedIndex;

  var cuisine = cSelect[cIndex].value;
  var neighborhood = nSelect[nIndex].value;

  DBHelper.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood,
  function (error, restaurantsList) {
    if (error) {
      // Got an error!
      console.error(error);
    } else {
      resetRestaurants(restaurantsList);
      fillRestaurantsHTML();
    }
  });
};

/**
    * Fetch neighborhoods and cuisines as soon as the page is loaded.
    */
document.addEventListener('DOMContentLoaded', function () {
  fetchNeighborhoods();
  fetchCuisines();
});

/**
     * Initialize Google map, called from HTML.
     */
window.initMap = function () {
  var loc = {
    lat: 40.722216,
    lng: -73.987501 };

  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 12,
    center: loc,
    scrollwheel: false });

  var loadedMap = map;
  // disable keyboard navigation for google maps
  google.maps.event.addListener(loadedMap, 'tilesloaded', function () {
    document.querySelectorAll('#map a').forEach(function (item) {
      item.setAttribute('tabindex', '-1');
    });
    document.querySelectorAll('#map area').forEach(function (item) {
      item.setAttribute('tabindex', '-1');
    });
  });
  updateRestaurants();
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
